{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","style","backgroundColor","color","onClick","text","defaultProps","Header","title","onAdd","showAddTask","closeButtonStyle","cursor","Task","task","reminder","onDoubleClick","onToggleReminder","id","onDelete","day","Tasks","tasks","map","AddTask","useState","setTitle","setDay","setReminder","onSubmit","event","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","Footer","href","About","App","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","console","log","addTask","method","headers","body","JSON","stringify","fetchTask","deleteTask","filter","toggleReminder","taskToToggle","updatedTask","path","exact","render","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.583c7cf7.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nconst Button = (props) => {\n    return (\n        <button\n            className='btn'\n            style={{ backgroundColor: props.color }}\n            onClick={props.onClick}\n        >\n            {props.text}\n\n        </button>\n    )\n}\n\nButton.propTypes = {\n    color: PropTypes.string,\n    text: PropTypes.string,\n    onClick: PropTypes.func\n}\n\nButton.defaultProps = {\n    color: \"#ccc\",\n    text: \"Button\"\n}\n\nexport default Button","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = (props) => {\n\n    return (\n        <header className='header'>\n            <h1>{props.title}</h1>\n            <Button onClick={props.onAdd} color={props.showAddTask ? 'crimson' : 'green'} text={props.showAddTask ? 'Close' : 'Add'} />\n        </header>\n    )\n}\n\nHeader.propTypes = {\n    title: PropTypes.string\n}\n\nHeader.defaultProps = {\n    title: \"Task Tracker\"\n}\n\nexport default Header","import React from 'react'\nimport { FaTimes } from 'react-icons/fa'\n\nconst Task = (props) => {\n    return (\n        <div className={`task ${props.task.reminder ? 'reminder' : ''}`}\n            onDoubleClick={() => props.onToggleReminder(props.task.id)}>\n            <h3>{props.task.title} <FaTimes style={closeButtonStyle} onClick={() => props.onDelete(props.task.id)} /></h3>\n            <p>{props.task.day}</p>\n        </div>\n    )\n}\n\nconst closeButtonStyle = {\n    color: 'crimson',\n    cursor: 'pointer'\n}\n\nexport default Task","import React from 'react'\nimport Task from './Task'\n\nconst Tasks = (props) => {\n    \n    return(\n        <div>\n            {props.tasks.map((task) => (<Task key={task.id} task={task} onToggleReminder={props.onToggleReminder} onDelete={props.onDelete} />))}\n        </div>\n    )\n}\n\nexport default Tasks","import React from 'react'\nimport  {useState} from 'react'\n\nconst AddTask = (props) => {\n    const [title, setTitle] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n    \n    const onSubmit = (event) => {\n        event.preventDefault()\n\n        if (!title) {\n            alert('Please add a task') \n            return\n        }\n\n        props.onAdd({title, day, reminder})\n        setTitle('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label htmlFor=\"\">Task</label>\n                <input type=\"text\" placeholder='Add Task' value={title} onChange={(event) => setTitle(event.target.value)} />\n            </div>\n\n            <div className='form-control'>\n                <label htmlFor=\"\">Day & Time</label>\n                <input type=\"text\" placeholder='Add Day & Time' value={day} onChange={(event) => setDay(event.target.value)} />\n            </div>\n\n            <div className='form-control-check'>\n                <label htmlFor=\"\">Set Reminder</label>\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(event) => setReminder(event.target.checked)}/>\n            </div>\n\n            <input type=\"submit\" className='btn btn-block' value=\"Save Task\"/>\n        </form>\n    )\n}\n\nexport default AddTask","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>Copyright &copy; 2021</p>\n            <a href=\"/about\">About</a>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nfunction About() {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            <a href=\"/\">Go Back</a>\n        </div>\n    )\n}\n\nexport default About\n","import { useState, useEffect } from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, [])\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\")\n    const data = await res.json()\n    console.log(data);\n    return data;\n  }\n\n  const addTask = async (task) => {\n    const res = await fetch(`http://localhost:5000/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json()\n    setTasks([...tasks, data])\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n    console.log(data);\n    return data;\n  }\n\n  const deleteTask = async (id) => {\n    console.log(id);\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, { method: 'DELETE' })\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updatedTask)\n    })\n\n    const data = await res.json()\n\n    console.log(id);\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task))\n  }\n\n  return (\n    <Router>\n\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAddTask={showAddTask} />\n      \n      <Route path='/' exact render={(props) => (\n        <>\n        {showAddTask && <AddTask onAdd={addTask} />}\n        {(tasks.length > 0) ? <Tasks tasks={tasks} onToggleReminder={toggleReminder} onDelete={deleteTask} /> : 'No tasks to display'}\n        </>\n      )} />\n      <Route path='/about' component={About} />\n      <Footer />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}